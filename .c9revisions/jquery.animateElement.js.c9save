{"ts":1361328182376,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1361328195167,"patch":[[{"diffs":[[1,"/*!\r\n * jQuery animation helper plugin\r\n * Original author: Rod LEviton\r\n * Licensed under the MIT license\r\n */\r\n;(function ($, window, document, undefined) {\r\n    \"use strict\";\r\n    var animateElement = 'animateElement',\r\n        defaults = {\r\n            hidden: false,\r\n            validation: false,\r\n            speed: 300\r\n        };\r\n\r\n    // The actual plugin constructor\r\n    function Plugin(element, options) {\r\n        this.element = element;\r\n        this.options = $.extend({}, defaults, options);\r\n        this._defaults = defaults;\r\n        this._name = animateElement;\r\n        this.init();\r\n    }\r\n\r\n    Plugin.prototype = {\r\n\r\n        init: function () {\r\n\r\n            this.update(); // Initialise data attributes\r\n\r\n            if ((this.options.hidden) && (this.options.hidden === true)) {\r\n                $(this.element).css({\r\n                    'height': 0,\r\n                    'overflow': 'hidden',\r\n                    'opacity': 0,\r\n                    'paddingTop': 0,\r\n                    'paddingBottom': 0,\r\n                    'marginTop': 0,\r\n                    'marginBottom': 0\r\n                });\r\n            }\r\n\r\n            if ((this.options.validation) && (this.options.validation === true)) {\r\n                this.disableInputs();\r\n            }\r\n\r\n        },\r\n\r\n        update: function () {\r\n            $(this.element).data('paddingTop', $(this.element).css('paddingTop'));\r\n            $(this.element).data('paddingBottom', $(this.element).css('paddingBottom'));\r\n            $(this.element).data('marginTop', $(this.element).css('marginTop'));\r\n            $(this.element).data('marginBottom', $(this.element).css('marginBottom'));\r\n            $(this.element).data('height', $(this.element).height());\r\n            $(this.element).data('validation', this.options.validation);\r\n        },\r\n\r\n        show: function () {\r\n            $(this.element).stop().delay(this._defaults.speed).animate({\r\n                'height': $(this.element).data('height'),\r\n                'paddingTop': $(this.element).data('paddingTop'),\r\n                'paddingBottom': $(this.element).data('paddingTop'),\r\n                'marginTop': $(this.element).data('marginTop'),\r\n                'marginBottom': $(this.element).data('marginBottom')\r\n            }, 300, function () {\r\n                $(this.element).stop().animate({\r\n                    'opacity': 1\r\n                }, this._defaults.speed);\r\n                $(this.element).css({\r\n                    'height': 'auto'\r\n                });\r\n            });\r\n\r\n            if ((this.options.validation) && (this.options.validation === true)) {\r\n                this.enableInputs();\r\n            }\r\n        },\r\n\r\n        hide: function () {\r\n            $(this.element).stop().animate({\r\n                'opacity': 0\r\n            }, this._defaults.speed, function () {\r\n                $(this.element).stop().animate({\r\n                    'height': 0\r\n                }, this._defaults.speed, function () {\r\n                    $(this.element).css({\r\n                        'opacity': 0,\r\n                        'paddingTop': 0,\r\n                        'paddingBottom': 0,\r\n                        'marginTop': 0,\r\n                        'marginBottom': 0,\r\n                        'overflow': 'hidden'\r\n                    });\r\n                });\r\n\r\n            });\r\n\r\n            if ($(this.element).data('validation') === true) {\r\n                this.disableInputs();\r\n            }\r\n        },\r\n\r\n        disableInputs: function () {\r\n            $('input', this.element).each(function () {\r\n                $(this).attr('disabled', true);\r\n            });\r\n\r\n            $('select', this.element).each(function () {\r\n                $(this).attr('disabled', true);\r\n            });\r\n        },\r\n\r\n        enableInputs: function () {\r\n            $('input', this.element).each(function () {\r\n                $(this).attr('disabled', false);\r\n            });\r\n\r\n            $('select', this.element).each(function () {\r\n                $(this).attr('disabled', false);\r\n            });\r\n        }\r\n    };\r\n\r\n    $.fn[animateElement] = function (options) {\r\n        var args = arguments;\r\n        if (options === undefined || typeof options === 'object') {\r\n            return this.each(function () {\r\n                if (!$.data(this, 'plugin_' + animateElement)) {\r\n                    $.data(this, 'plugin_' + animateElement, new Plugin(this, options));\r\n                }\r\n            });\r\n        } else if (typeof options === 'string' && options[0] !== '_' && options !== 'init') {\r\n            return this.each(function () {\r\n                var instance = $.data(this, 'plugin_' + animateElement);\r\n                if (instance instanceof Plugin && typeof instance[options] === 'function') {\r\n                    instance[options].apply(instance, Array.prototype.slice.call(args, 1));\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n})(jQuery, window, document);"]],"start1":0,"start2":0,"length1":0,"length2":4984}]],"length":4984,"saved":false}
{"ts":1361328223981,"patch":[[{"diffs":[[0,"r: Rod L"],[-1,"E"],[1,"e"],[0,"viton\r\n "]],"start1":57,"start2":57,"length1":17,"length2":17},{"diffs":[[0,"\r\n\r\n"],[-1,"    // The actual plugin constructor\r\n"],[0,"    "]],"start1":339,"start2":339,"length1":46,"length2":8}]],"length":4946,"saved":false}
